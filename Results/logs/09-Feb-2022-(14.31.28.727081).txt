INFO 2022-02-09 14:31:28,727 Testing how to add k-th order approx to chain rule method, date: 09-02-2022
INFO 2022-02-09 14:31:28,727 M=2, r=1.55, alpha=2, num_coh=0, cutoff=10
INFO 2022-02-09 14:31:28,727 U=[[ 0.17107311-0.5899402j   0.19468686+0.7647232j ]
 [-0.44618771+0.65086179j -0.0426062 +0.61276436j]]
INFO 2022-02-09 14:31:28,727 mu=[ 0. -0. -0.  0.], cov=[[20.70996344  1.87470234 -1.06242331 -5.10939223]
 [ 1.87470234 17.74746063 -5.10939223  7.01170583]
 [-1.06242331 -5.10939223  1.53303705 -1.87470234]
 [-5.10939223  7.01170583 -1.87470234  4.49553985]]
INFO 2022-02-09 14:31:28,896 det_pattern=[0 0], Jake_prob=0.2934384869320901, k_prob=0.2934384869320899, equal = False
INFO 2022-02-09 14:31:28,911 det_pattern=[1 0], Jake_prob=0.3459068126569838, k_prob=0.34590681265698353, equal = False
INFO 2022-02-09 14:31:28,927 det_pattern=[2 0], Jake_prob=0.034689683058441216, k_prob=0.03468968305844109, equal = False
INFO 2022-02-09 14:31:28,927 det_pattern=[3 0], Jake_prob=0.09977117559846883, k_prob=0.09977117559846903, equal = False
INFO 2022-02-09 14:31:28,927 det_pattern=[4 0], Jake_prob=0.07651172313493015, k_prob=0.07651172313492972, equal = False
INFO 2022-02-09 14:31:28,943 det_pattern=[5 0], Jake_prob=0.020531691817817475, k_prob=0.02053169181781764, equal = False
INFO 2022-02-09 14:31:28,958 det_pattern=[6 0], Jake_prob=0.05940371684628326, k_prob=0.05940371684628328, equal = False
INFO 2022-02-09 14:31:28,965 det_pattern=[7 0], Jake_prob=0.010487420629540523, k_prob=0.010487420629540513, equal = False
INFO 2022-02-09 14:31:28,965 det_pattern=[8 0], Jake_prob=0.03215362049726971, k_prob=0.03215362049726969, equal = False
INFO 2022-02-09 14:31:28,980 det_pattern=[9 0], Jake_prob=0.01263765792292076, k_prob=0.012637657922921057, equal = False
INFO 2022-02-09 14:31:28,980 det_pattern=[10  0], Jake_prob=0.014468010905254201, k_prob=0.014468010905254642, equal = False
INFO 2022-02-09 14:31:28,996 det_pattern=[1 0], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,012 det_pattern=[1 1], Jake_prob=0.27364141236380485, k_prob=0.27364141236380196, equal = False
INFO 2022-02-09 14:31:29,012 det_pattern=[1 2], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,027 det_pattern=[1 3], Jake_prob=0.2599906762395096, k_prob=0.2599906762395078, equal = False
INFO 2022-02-09 14:31:29,030 det_pattern=[1 4], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,030 det_pattern=[1 5], Jake_prob=0.20585076148735598, k_prob=0.20585076148735443, equal = False
INFO 2022-02-09 14:31:29,045 det_pattern=[1 6], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,045 det_pattern=[1 7], Jake_prob=0.1521191740795179, k_prob=0.15211917407951345, equal = False
INFO 2022-02-09 14:31:29,065 det_pattern=[1 8], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,065 det_pattern=[1 9], Jake_prob=0.10839797582981178, k_prob=0.10839797582982244, equal = False
INFO 2022-02-09 14:31:29,080 det_pattern=[ 1 10], Jake_prob=0.0, k_prob=0.0, equal = True
INFO 2022-02-09 14:31:29,080 Final det pattern = [1 3], with overall Jake prob = 0.08993254613854258
INFO 2022-02-09 14:31:29,080 k-th order approx gives prob = 0.03160295626963602 for k=2N
INFO 2022-02-09 14:31:29,080 Are they equal= False
INFO 2022-02-09 14:31:29,080 Calculate loop hafnian for B, gamma, and final det_pattern = [1 3]
INFO 2022-02-09 14:31:29,080 Jakes chain rule gives a batch of [  0.          +0.j           0.15465927  +0.42151484j
   0.          +0.j           0.98510188  +0.4228475j
   0.          +0.j           3.91540986  -1.69346771j
   0.          +0.j           8.1248006  -22.33402299j
   0.          +0.j         -76.30119317-152.17403241j
   0.          +0.j        ]
INFO 2022-02-09 14:31:29,080 A simple loop_hafnian gives (0.9851018833162708+0.4228474969653086j)
INFO 2022-02-09 14:31:29,080 loop_hafnian_approx gives (0.9851018833162696+0.4228474969653079j) for k=2N
